# GNUmed database system bootstrapping config file
#-------------------------------------------------
# license: GPL v2 or later
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/bootstrap/update_db-v21_v22.conf
version = 1.0

#----------------------------------
[installation]
interactive = yes

keep temp files = no

description = $description$
This will update an existing GNUmed version 21
database to the version 22 schema. It does not do
any harm to the data contained within.

The existing database will be cloned first. The copy is
then modified. The original database remains unchanged.
$description$


bundles = $bundles$
v21_fixups-pre_v22
v21-v22-static
v21-v22-dynamic
v22-fixups
$bundles$

#----------------------------------
[bundle v21_fixups-pre_v22]
database alias = gnumed_v22
minimum postgresql version = 9.2
schema base directory = ../sql/v20-v21/fixups/
schema = $schema$
v21-db-sql_inheritance-fixup.sql
v21-previously-missing-array_agg-fixup.sql
v21-dem-view_grants-fixup.sql
../dynamic/v21-release_notes-dynamic.sql
v21-ref-auto_hint-tetanus_STIKO.sql
v21-ref-auto_hint-klug_entscheiden_pulmo.sql
v21-ref-auto_hint-klug_entscheiden_endokrino.sql
v21-CD_DVD-sleeve.sql
v21-AMTS_Medikationsplan-fixup.sql
v21-ref-auto_hint-smoking_status-fixup.sql
v21-ref-GKV_CU-fixup.sql
v21-clin-get_hints_for_patient-fixup.sql
v21-notifications-dynamic.sql
v21-clin-uppercase_soap_cat-fixup.sql
v21-dem-identity-fixup.sql
v21-Constans-TVT-OE.sql
$schema$

#----------------------------------
[bundle v21-v22-static]
database alias = gnumed_v22
minimum postgresql version = 9.2
schema base directory = ../sql/v21-v22/static/
schema = $schema$
v22-ref-substance-static.sql
v22-ref-lnk_loinc2substance-static.sql
v22-ref-dose-static.sql
v22-ref-drug_product-static.sql
v22-ref-lnk_dose2drug-static.sql
v22-ref-auto_hint-static.sql
v22-clin-vaccine-static.sql
v22-clin-lnk_loinc2test_panel-static.sql
v22-clin-procedure-static.sql
v22-clin-external_care-static.sql
v22-blobs-doc_med-static.sql
$schema$

#----------------------------------
[bundle v21-v22-dynamic]
database alias = gnumed_v22
minimum postgresql version = 9.2
schema base directory = ../sql/v21-v22/dynamic/
schema = $schema$
v22-i18n-v_missing_translations.sql
v22-notifications-dynamic.sql
v22-blobs-doc_med-dynamic.sql
v22-blobs-v_doc_med.sql
v22-blobs-v_doc_desc.sql
v22-blobs-v_obj4doc_no_data.sql
v22-blobs-v_reviewed_doc_objects.sql
v22-blobs-v_latest_mugshot.sql
v22-ref-auto_hint-dynamic.sql
# conversion of drug products
v22-ref-substance-dynamic.sql
v22-ref-lnk_loinc2substance-dynamic.sql
v22-ref-dose-dynamic.sql
v22-ref-lnk_dose2drug-dynamic.sql
v22-ref-v_drug_products.sql
# convert vaccines
v22-clin-move_vacc_objects_to_ref.sql
v22-ref-remove_unused_vaccines.sql
v22-ref-create_generic_vaccines.sql
v22-ref-convert_vaccines.sql
v22-ref-remove_unused_vaccines.sql
v22-ref-create_generic_vaccines.sql
v22-ref-vacc_indication-drop.sql
v22-ref-v_vaccines.sql
v22-ref-v_indications4vaccine.sql
# done with vaccines, now vaccinations
v22-clin-v_vaccinations.sql
v22-clin-v_pat_vaccs4indication.sql
v22-clin-v_pat_last_vacc4indication.sql
v22-clin-v_vaccinations_journal.sql
# done with vaccinations
# test panel conversion
v22-clin-lnk_loinc2test_panel-dynamic.sql
v22-clin-convert_test_panels.sql
v22-clin-v_test_panels.sql
v22-clin-v_test_types4test_panel.sql
v22-clin-v_test_types.sql
v22-clin-v_test_results.sql
v22-clin-v_test_results_journal.sql
# with test panel conversion
v22-dem-unique_named_identity.sql
v22-dem-v_person_names.sql
v22-dem-v_message_inbox.sql
v22-dem-v_pat_addresses.sql
v22-clin-lowercase_soap_cat.sql
v22-clin-remove_old_empty_encounters.sql
v22-clin-v_hospital_stays.sql
v22-clin-procedure-dynamic.sql
v22-clin-export_item-dynamic.sql
v22-clin-v_export_items.sql
v22-clin-v_external_care.sql
v22-clin-substance_intake-dynamic-run_once.sql
v22-clin-substance_intake-dynamic.sql
v22-clin-substance_intake-insert_triggers.sql
v22-clin-substance_intake-update_triggers.sql
v22-clin-substance_intake-delete_triggers.sql
v22-clin-transfer_all_encounter_data.sql
v22-clin-vaccine_batches-dynamic.sql
v22-clin-v_suppressed_hints.sql
v22-clin-v_suppressed_hints_journal.sql
v22-blobs-v_doc_med_journal.sql
v22-clin-v_procedures_journal.sql
v22-clin-v_substance_intake_journal.sql
v22-clin-v_external_care_journal.sql
v22-clin-v_emr_journal.sql
v22-clin-get_hints_for_patient.sql
v22-clin-v_candidate_diagnoses.sql
v22-ref-auto_hints.sql
v22-i18n-German.sql
v22-kwd-patient_media_export_icon.sql
v22-release_notes-dynamic.sql
$schema$

#----------------------------------
[bundle v22-fixups]
database alias = gnumed_v22
minimum postgresql version = 9.2
schema base directory = ../sql/v21-v22/fixups/
schema = $schema$
v22-gm-concat_table_structure_v19_and_up-fixup.sql
v22-ref-paperwork_templates-fixups.sql
v22-invoice_id_grants-fixup.sql
v22-i18n-lang_funcs-fixup.sql
v22-clin-v_candidate_diagnoses-fixup.sql
v22-dem-v_message_inbox-fixup.sql
v22-add_generic_covid_vaccine.sql
v22-clin-remove_old_empty_encounters-fixup.sql
v22-clin-move_waiting_list_entry-fixup.sql
v22-blobs-doc_med-idx.sql
v22-blobs-doc_obj-idx.sql
v22-blobs-reviewed_doc_objs-idx.sql
v22-blobs-v_reviewed_doc_objects-fixup.sql
v22-dem-identity-idx.sql
v22-dem-names-idx.sql
v22-dem-unique_named_identity-fixup.sql
v22-dem-v_pat_addresses-fixups.sql
v22-dem-org-permission-fixups.sql
v22-release_notes-fixup.sql
$schema$

#----------------------------------
[bundle v22-test_data]
database alias = gnumed_v22
minimum postgresql version = 9.2
schema base directory = ../sql/test-data/
schema = $schema$
$schema$

#----------------------------------
[database gnumed_v22]
name = gnumed_v22
override name by = GM_CORE_DB
drop target database = 1
target version = v22
reindex = 1
revalidate = 1
transfer users = 1
template database = gnumed_v21
template version = v21
server alias = local host
audit disable = 0
audit trail parent table = audit.audit_trail
audit trail table prefix = log_
audit fields table = audit.audit_fields
schema base directory = ../sql/v21-v22/
schema = $schema$
$schema$

superuser schema = $superuser schema$
fixups/v22-gm-concat_table_structure_v19_and_up-fixup.sql
superuser/v22-gm-load_auto_explain.sql
$superuser schema$

script base directory = ../sql/v21-v22/python/
data import scripts = $data import scripts$
v22-import-form-templates.py
v22-2-fixup-form-templates.py
v22-import-plot-scripts.py
v22-17-fixup-form-templates.py
$data import scripts$




# line 1: old database
# line 2: new database
upgrade plausibility checks = $upgrade plausibility checks$
identities::::select count(1) from dem.identity
	select count(1) from dem.identity			-- new
names::::select count(1) from dem.names
	select count(1) from dem.names	-- new
v_all_persons::::select count(1) from dem.v_persons
	select count(1) from dem.v_all_persons	-- new
v_active_persons::::select count(1) from dem.v_active_persons
	select count(1) from dem.v_active_persons	-- new
staff::::select count(1) from dem.staff								-- old
	select count(1) from dem.v_staff								-- new
v_staff::::select count(1) from dem.v_staff
	select count(1) from dem.v_staff	-- new
addresses::::select count(1) from dem.address
	select count(1) from dem.address	-- new
unique URBs with ZIP::::select count(1) from dem.v_uniq_zipped_urbs		-- old
	select count(1) from dem.v_uniq_zipped_urbs							-- new
patient addresses view::::select count(1) from dem.v_pat_addresses		-- old
	select count(1) from dem.v_pat_addresses							-- new
episodes::::select count(1) from clin.episode where not summary ilike '%[substance use]%'
	select count(1) from clin.episode where not summary ilike '%[substance use]%'
denormalized episodes::::select count(1) from clin.v_pat_episodes where not summary ilike '%[substance use]%'
	select count(1) from clin.v_pat_episodes where not summary ilike '%[substance use]%'
encounters::::select count(1) from clin.encounter
	select count(1) from clin.v_pat_encounters
issues::::select count(1) from clin.health_issue
	select count(1) from clin.health_issue
issues view::::select count(1) from clin.v_health_issues
	select count(1) from clin.v_health_issues
procedures::::select count(1) from clin.procedure
	select count(1) from clin.procedure
documents::::select count(1) from blobs.doc_med
	select count(1) from blobs.doc_med
document pages::::select count(1) from blobs.doc_obj
	select count(1) from blobs.doc_obj
allergies::::select count(1) from clin.allergy
	select count(1) from clin.allergy
communication channels::::select count(1) from dem.lnk_identity2comm
	select count(1) from dem.lnk_identity2comm
test results::::select count(1) from clin.test_result
	select count(1) from clin.test_result
unmatched test results::::select count(1) from clin.incoming_data_unmatched
	select count(1) from clin.incoming_data_unmatched
unmatchable test results::::select count(1) from clin.incoming_data_unmatchable
	select count(1) from clin.incoming_data_unmatchable
denormalized test results::::select count(1) from clin.v_test_results
	select count(1) from clin.v_test_results
allergy states::::select count(1) from clin.allergy_state
	select count(1) from clin.allergy_state
waiting list entries::::select count(1) from clin.waiting_list
	select count(1) from clin.waiting_list
waiting list view entries::::select count(1) from clin.v_waiting_list
	select count(1) from clin.v_waiting_list
waiting list integrity::::select((select count(1) from clin.v_waiting_list) = (select count(1) from clin.waiting_list))
	select((select count(1) from clin.v_waiting_list) = (select count(1) from clin.waiting_list))
messages::::select count(1) + 3 from dem.message_inbox
	select count(1) from dem.message_inbox
test orgs::::select count(1) from clin.test_org
	select count(1) from clin.test_org
--substance transfer - name::::select count(1) from (select distinct on (description) description from ref.consumable_substance WHERE atc_code NOT LIKE 'J07%') as d
--	select count(1) from ref.substance WHERE atc NOT LIKE 'J07%'
--substance transfer - dose::::select count(1) from ref.consumable_substance WHERE atc_code NOT LIKE 'J07%'
--	select count(1) from ref.v_substance_doses where atc_substance NOT LIKE 'J07%'
--dose view consistency::::select count(1) from ref.consumable_substance
--	select count(1) from ref.v_substance_doses
substance view -- correctness::::select True
	select (select count(1) from ref.substance) = (select count(1) from ref.v_substances)
dose view -- correctness::::select True
	select (select count(1) from ref.dose) = (select count(1) from ref.v_substance_doses)
substance intakes (tables)::::select count(1) from clin.substance_intake
	select count(1) from clin.substance_intake
substance intakes (views)::::select count(1) from clin.v_substance_intakes
	select count(1) from clin.v_substance_intakes
substance intakes (table vs view)::::select count(1) from clin.substance_intake
	select count(1) from clin.v_substance_intakes
--brands consistency::::select (select count(1) from ref.branded_drug) + (select count(1) from (select distinct on (substance, amount, unit) substance from clin.v_nonbrand_intakes) as d)
--	select count(1) from ref.drug_product
--vaccines::::select count(1) from clin.vaccine where pk in (select fk_vaccine from clin.vaccination)
--	select count(1) from ref.vaccine
vaccines view (existence)::::select TRUE from clin.v_vaccines
	select TRUE from ref.v_vaccines
--vaccines (indication count)::::select count(1) from clin.v_indications4vaccine where pk_vaccine in (select fk_vaccine from clin.vaccination)
--	select count(1) from ref.v_indications4vaccine
vaccinations (total count)::::select count(1) from clin.vaccination
	select count(1) from clin.vaccination
--vaccinations-by-indication (total count)::::select count(1) from clin.v_pat_vaccs4indication
--	select count(1) from clin.v_pat_vaccs4indication
vaccinations-by-indication (patient count)::::select count(1) from (select distinct on (pk_patient) pk_patient from clin.v_pat_vaccs4indication) as distinct_pats
	select count(1) from (select distinct on (pk_patient) pk_patient from clin.v_pat_vaccs4indication) as distinct_pats
vaccinations-by-indication (shots count)::::select count(1) from (select distinct on (pk_vaccination) pk_vaccination from clin.v_pat_vaccs4indication) as distinct_shots
	select count(1) from (select distinct on (pk_vaccination) pk_vaccination from clin.v_pat_vaccs4indication) as distinct_shots
--vaccinations-by-indication (indications count)::::select count(1) from clin.v_pat_vaccs4indication group by pk_indication
--	select count(1) from clin.v_pat_vaccs4indication group by atc_indication
--vaccinations-by-indication (vaccine count)::::select count(1) from (select distinct on (pk_vaccine) pk_vaccine clin.v_pat_vaccs4indication) as distinct_vaccines
--	select count(1) from (select distinct on (pk_vaccine) pk_vaccine clin.v_pat_vaccs4indication) as distinct_vaccines
vaccinations-by-indication (consistency)::::select count(1) from clin.vaccination
	select count(1) from (select distinct on (pk_vaccination) pk_vaccination from clin.v_pat_vaccs4indication) as distinct_shots
latest vaccinations (total count)::::select count(1) from clin.v_pat_last_vacc4indication where indication NOT ILIKE '%influenza%'
	select count(1) from clin.v_pat_last_vacc4indication where indication NOT ILIKE '%influenza%'
latest vaccinations (patient count)::::select count(1) from clin.v_pat_last_vacc4indication where indication NOT ILIKE '%influenza%' group by pk_patient
	select count(1) from clin.v_pat_last_vacc4indication where indication NOT ILIKE '%influenza%' group by pk_patient
latest vaccinations (shots count)::::select count(1) from clin.v_pat_last_vacc4indication group by pk_vaccination
	select count(1) from clin.v_pat_last_vacc4indication group by pk_vaccination
latest vaccinations (indications count)::::select count(1) from clin.v_pat_last_vacc4indication group by pk_indication
	select count(1) from clin.v_pat_last_vacc4indication group by atc_indication
latest vaccinations (vaccine count)::::select count(1) from clin.v_pat_last_vacc4indication group by pk_vaccine
	select count(1) from clin.v_pat_last_vacc4indication group by pk_vaccine
requests on results::::select count(1) from clin.test_result where fk_request is not NULL
	select count(1) from clin.test_result where fk_request is not NULL
clinical code links (total) - internal consistency::::select True
	select ((select count(1) from clin.lnk_code2item_root) = (select ((select count(1) from clin.lnk_code2procedure) + (select count(1) from clin.lnk_code2rfe) + (select count(1) from clin.lnk_code2aoe) + (select count(1) from clin.lnk_code2episode) + (select count(1) from clin.lnk_code2h_issue) + (select count(1) from clin.lnk_code2narrative))))
paperwork templates::::select count(1) + 3 from ref.paperwork_templates
	select count(1) from ref.paperwork_templates
automatic hints::::select count(1) from ref.auto_hint
	select count(1) - 1 from ref.auto_hint
-- do NOT try to check the number of suppressed hints because
-- even though we do know the number of *hints* that will have
-- changed we simply cannot know the number of suppressions that
-- will be lifted by those changes
--suppressed hints::::select count(1) from clin.suppressed_hint
--	select count(1) from clin.suppressed_hint
raw keyword expansions::::select count(1) from ref.keyword_expansion
	select count(1) - 2 from ref.keyword_expansion
mapped keyword expansions::::select count(1) from ref.v_keyword_expansions
	select count(1) - 2 from ref.v_keyword_expansions
organisations::::select count(1) from dem.org
	select count(1) from dem.org
organisational units::::select count(1) from dem.org_unit
	select count(1) from dem.org_unit
data sources::::select count(1) from ref.data_source
	select count(1) from ref.data_source
bills with invoices but without VAT status::::select 0
	select count(1) from bill.bill where (apply_vat is null) and (fk_doc is not null)
clinical items::::select count(1) from clin.clin_root_item
	select count(1) from clin.clin_root_item
export items::::select count(1) from clin.export_item
	select count(1) from clin.export_item
export items view::::select count(1) from clin.v_export_items
	select count(1) from clin.v_export_items
export items integrity::::select ((select count(1) from clin.export_item) = (select count(1) from clin.v_export_items))
	select ((select count(1) from clin.export_item) = (select count(1) from clin.v_export_items))
external care::::select count(1) from clin.external_care
	select count(1) from clin.external_care
external care view integrity::::select TRUE
	select ((select count(1) from clin.external_care) = (select count(1) from clin.v_external_care))
-- ------------------
-- commented out:
--ATC codes::::select count(1) from (select distinct on (code, term, fk_data_source) 1 from ref.atc) as uniq_atc
--	select count(1) from ref.atc
--ATC vs generic codes - internal consistency::::select 0
--	select code, term, fk_data_source from ref.atc except select code, term, fk_data_source from ref.generic_coding_system
--LOINC codes::::select count(1) from ref.loinc
--	select count(1) from ref.loinc
--LOINC vs generic codes - internal consistency::::select 0
--	select code, term, fk_data_source from ref.loinc except select code, term, fk_data_source from ref.generic_coding_system
--generic codes (total) - internal consistency::::select True
--	select ((select count(1) from ref.coding_system_root) = (select ((select count(1) from ref.atc) + (select count(1) from ref.loinc))))
-- ------------------
-- for debugging:
--skipped check::::select 'skipped in old'		-- old
--	select 'skipped in new'						-- new
--check definition error::select 1				-- old
--	select 1									-- new
--syntax error (old)::::selec 1 				-- old
--	select 1									-- new
--syntax error (new)::::select 1 				-- old
--	selec 1										-- new
--data mismatch error::::select 1 				-- old
--	select 2 -- new
$upgrade plausibility checks$

#----------------------------------
[server local host]
name = 
port = 5432
template database = template1
super user alias = postgres
schema base directory = ../sql/v21-v22/
schema = $schema$
$schema$

#----------------------------------
[user GNUmed owner]
name = gm-dbo
password = 

[user postgres]
name = postgres
#password =

#----------------------------------
# these really shouldn't be changed
#----------------------------------
[GnuMed defaults]

database owner alias = GNUmed owner

groups = $groups$
$groups$

#----------------------------------
