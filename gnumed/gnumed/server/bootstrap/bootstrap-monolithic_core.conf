# GNUmed database system bootstrapping config file
#-------------------------------------------------
# license: GPL v2 or later
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/bootstrap/bootstrap-monolithic_core.conf,v $
version = $Revision: 1.72 $

#----------------------------------
[installation]
interactive = yes

keep temp files = no

description = $description$
This will set up a monolithic GNUmed backend with all bundles
in one database named [gnumed]. It will contain the core schema
without country or language-specific components. Those will
have to be added by using one of the bootstrap-XX.conf file
where XX represents the ISO country code.

Currently this file will also import the test accounts which
MUST be removed prior to real use.

$description$

bundles = $bundles$
config
reference
demographics
clinical
documents
office
$bundles$

#----------------------------------
[bundle config]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmConfig-static.sql
gmConfigData.sql
gmConfigViews.sql
$schema$

[bundle demographics]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmDemographics.sql
gmProviderInbox-static.sql
gmDemographics-Person-views.sql
gmDemographics-Person-data.sql
gmDemographics-GIS-views.sql
gmDemographics-GIS-data.sql
gmCountryZones.sql
gmDemographics-Org-views.sql
gmDemographics-Grants.sql
gmProviderInbox-data.sql
$schema$

[bundle clinical]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmClin-EMR-Structure-static.sql
gmclinical.sql
gmClin-Vaccination-static.sql
gmWaitingList.sql
gmReviewedStatus-static.sql
gmReviewedStatus-dynamic.sql
gmMeasurements.sql
gmClin-EMR-Structure-dynamic.sql
gmClin-Vaccination-dynamic.sql
gmClinicalViews.sql
gmClin-EMR-Structure-data.sql
gmClinicalData.sql
gmClin-Vaccination-data.sql
gmUnmatchedData-static.sql
gmUnmatchedData-dynamic.sql
gmUnmatchableData-static.sql
gmUnmatchableData-dynamic.sql
$schema$

[bundle documents]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmBlobs.sql
gmBlobsData.sql
gmBlobViews.sql
gmProviderInbox-dynamic.sql
$schema$

[bundle reference]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmReference.sql
gmReference-dynamic.sql
gmReference-data.sql
$schema$

[bundle office]
database alias = core
minimum postgresql version = 7.4
schema base directory = ../sql/
schema = $schema$
gmoffice.sql
gmOfficeData.sql
gmConcatTableStructureFutureStub.sql
$schema$

#----------------------------------
[database core]
name = gnumed_v2
override name by = GM_CORE_DB
drop target database = 1
template database = template1
server alias = local host
audit disable = 0
schema base directory = ../sql/
schema = $schema$
gmSchemaRevision.sql
gmSchemaRevisionViews.sql
gmServices.sql
gmI18N.sql
gmI18N-dynamic.sql
gmAudit.sql
gmAudit-dynamic.sql
gmNotifications-static.sql
gmNotifications-dynamic.sql
gmHousekeeping.sql
$schema$

superuser schema = $superuser schema$
gmCreateProceduralLanguages.sql
gmCreateUserFunction.sql
gmPublicAccounts.sql
gmTestAccounts.sql
$superuser schema$

#----------------------------------
[server local host]
name = 
port = 5432
template database = template1
schema base directory = ../sql/
schema = $schema$
$schema$

#----------------------------------
[user GNUmed owner]
name = gm-dbo
password =

#----------------------------------
# these really shouldn't be changed
#----------------------------------
[GnuMed defaults]

database owner alias = GNUmed owner

groups = $groups$
gnumed_v2
gm-logins
gm-doctors
gm-staff_medical
gm-staff_office
gm-trainees_medical
gm-trainees_office
gm-public
$groups$

#----------------------------------
